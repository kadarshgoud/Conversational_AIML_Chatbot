<UserControl
    x:Class="ChatBotDemo.View.ArtificialIntelligence.Chatbot"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ViewModel="clr-namespace:ChatBotDemo.ViewModel.ArtificialIntelligence"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:mui="http://firstfloorsoftware.com/ModernUI"
    xmlns:helpers="clr-namespace:ChatBotDemo.Helpers"
    d:DesignHeight="600"
    d:DesignWidth="600"
    mc:Ignorable="d">

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <ei:CallMethodAction MethodName="PrepareViewAsync" TargetObject="{Binding}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <UserControl.Resources>
        <SolidColorBrush x:Key="BackgroundBrush" Color="{DynamicResource WindowBackgroundColor}"/>
        <!--User Input Template-->
        <DataTemplate x:Key="UserInputDataTemplate">
            <Grid HorizontalAlignment="Right">
                <Border CornerRadius="18" Background="LightSteelBlue" Padding="5">
                    <TextBlock Margin="5" TextWrapping="Wrap" VerticalAlignment="Center" Foreground="Black" Text="{Binding UserInputTextMessage, Mode=TwoWay}" />
                </Border>
            </Grid>
        </DataTemplate>
        <!--Chat String Output Template-->
        <DataTemplate x:Key="ChatStringOutputDataTemplate">
            <Grid HorizontalAlignment="Left">
                <Border CornerRadius="18" Background="MediumVioletRed" Padding="5">
                    <TextBlock TextWrapping="Wrap" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="5" Foreground="Black" Text="{Binding ChatOutputTextMessage, Mode=TwoWay}" />
                </Border>
            </Grid>
        </DataTemplate>
        <!--Chat Rich Text Output Template-->
        <DataTemplate x:Key="ChatRichtTextOutputDataTemplate">
            <DockPanel Margin="10">
                <Border CornerRadius="18" Background="Orange" Grid.Row="0"  >
                    <RichTextBox DockPanel.Dock="Left" VerticalAlignment="Center" Margin="0,0,35,0" FontFamily="Verdana" Foreground="Black" HorizontalAlignment="Right" Grid.Row="0" Document="{Binding ChatOutputRichtTextMessage, Mode=TwoWay}" />
                </Border>
            </DockPanel>
        </DataTemplate>
        <!--Chat Embedded Media Output Template-->
        <DataTemplate x:Key="ChatEmbeddedMediaDataTemplate">
            <DockPanel Margin="10">
                <Border CornerRadius="18" Background="MediumVioletRed" Grid.Row="0"  >
                    <Image Source="{Binding ChatOutputEmbeddedMediaMessage , Mode=TwoWay}" MaxWidth="200" Stretch="UniformToFill"/>
                </Border>
            </DockPanel>
        </DataTemplate>

        <!--Chat Embedded Media Text Output Template-->
        <DataTemplate x:Key="ChatEmbeddedMediaTextDataOutput">
            <DockPanel Margin="10">
                <Border CornerRadius="18" Background="MediumVioletRed" Grid.Row="0" >
                    <TextBlock TextWrapping="Wrap" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="5" Foreground="Black" Text="{Binding ChatEmbeddedMediaTextOutput, Mode=TwoWay}"/>
                </Border>
            </DockPanel>
        </DataTemplate>
        <!--Chat Embedded Video Output Template-->
        <DataTemplate x:Key="ChatEmbeddedVideoDataTemplate">
            <DockPanel Margin="10">
                <Border CornerRadius="18" Background="MediumVioletRed" Grid.Row="0"  >
                    <WebBrowser />
                </Border>
            </DockPanel>
        </DataTemplate>

        <helpers:ChatOutputTemplateSelector x:Key="ChatOutputTemplateSelector" 
                                         UserInputTemplate="{StaticResource UserInputDataTemplate}"
                                         ChatStringOutputTemplate="{StaticResource ChatStringOutputDataTemplate}"
                                            ChatRichtTextOutputTemplate="{StaticResource ChatRichtTextOutputDataTemplate}" ChatEmbeddedMediaTemplate="{StaticResource ChatEmbeddedMediaDataTemplate}"
                                            ChatEmbeddedMediaTextOutput ="{StaticResource ChatEmbeddedMediaTextDataOutput}"
                                            ChatEmbeddedVideoTemplate="{StaticResource ChatEmbeddedVideoDataTemplate}"
                                            />
    </UserControl.Resources>
    <UserControl.DataContext>
        <ViewModel:ChatbotViewModel/>
    </UserControl.DataContext>
    <Grid>
        <!--  Style="{StaticResource ContentRoot}"  -->
        <DockPanel Margin="0,0,20,0">
            <DockPanel.LayoutTransform>
                <ScaleTransform CenterX="0" CenterY="0" ScaleX="0.9" ScaleY="0.9"/>
            </DockPanel.LayoutTransform>
            <Grid >
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0"  ShowGridLines="False">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0">
                        <TextBlock
                            Margin="0,2,0,8"
                            DockPanel.Dock="Top"
                            Style="{StaticResource Heading2}"
                            Text="CHATBOT"
                            TextOptions.TextFormattingMode="Ideal"/>
                    </Grid>
                    <Grid Grid.Row="1" Margin="0,5,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBox Text="{Binding Input, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <TextBox.InputBindings>
                                <KeyBinding Key="Enter" Command="{Binding SubmitChatMessageAsyncCommand}" />
                            </TextBox.InputBindings>
                        </TextBox>
                        <!--<Button
                                Grid.Column="1"
                                Width="Auto"
                                Command="{Binding InitAIMLAsyncCommand}"
                                Content="Init AIML"
                                TextOptions.TextFormattingMode="Ideal" />-->
                        <Button
                            Grid.Column="2"
                            Width="Auto"
                            Command="{Binding SubmitChatMessageAsyncCommand}"
                            Content="Send"
                            TextOptions.TextFormattingMode="Ideal"/>

                    </Grid>
                    <!-- Generate the list of qns-->

                    <StackPanel Grid.Row="2"  Margin="0,5,0,0" >
                        <Grid Grid.Row="1" Margin="0,5,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <ComboBox x:Name="listofQuestions"
                                    Cursor="Hand"
                                          ItemsSource="{Binding ListOfQuestionsToBot}" SelectedItem="{Binding SelectedQuestionfromQuestionsToBot}">
                                <ComboBox.ItemContainerStyle>
                                    <Style TargetType="ComboBoxItem">
                                        <Setter Property="Cursor" Value="Pen"/>
                                    </Style>
                                </ComboBox.ItemContainerStyle>
                            </ComboBox>
                            <Button
                            Grid.Column="2"
                            Width="Auto" Content="Send" 
                                     Command="{Binding SubmitChatMessageAsyncCommand}" />
                        </Grid>
                    </StackPanel>

                    <Grid Grid.Row="3" Name="_contentCtrl">
                        <ScrollViewer Name="_scrollViewer">
                            <ListView x:Name="ChatOutputListView" ItemsSource="{Binding ChatMessageCollection, UpdateSourceTrigger=PropertyChanged}" HorizontalContentAlignment="Stretch" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                                <ListView.View>
                                    <GridView>
                                        <GridViewColumn CellTemplateSelector="{StaticResource ChatOutputTemplateSelector}"/>
                                    </GridView>
                                </ListView.View>
                                <ItemsControl.ItemContainerStyle>
                                    <Style TargetType="ListViewItem">
                                        <Setter Property="Background" Value="Transparent" />
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsAnswer}" Value="False">
                                                <Setter Property="HorizontalAlignment" Value="Right"/>
                                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                            </DataTrigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="Transparent" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ItemsControl.ItemContainerStyle>
                            </ListView>
                        </ScrollViewer>
                    </Grid>

                    <!--    <Viewbox Grid.Row="7" Margin="0,50,0,0" HorizontalAlignment="Right"  VerticalAlignment="Center">
                        <Grid  HorizontalAlignment="Left" Height="60" Margin="0" VerticalAlignment="Top" Width="100">
                            <Rectangle x:Name="Back" Fill="#FFA0A0A0" HorizontalAlignment="Left" Height="56" VerticalAlignment="Top" Width="96" Margin="2,2,0,0" RadiusY="29" RadiusX="29"/>
                            <Ellipse x:Name="Dot" Fill="White" HorizontalAlignment="Center" Height="50" VerticalAlignment="Center" Width="50" MouseLeftButtonDown="Dot_MouseLeftButtonDown"/>
                        </Grid>
                    </Viewbox> -->

                    <!--<StackPanel Grid.Row="7">

                        <ToggleButton x:Name="Togglebuttonxaml" Width="Auto" HorizontalAlignment="Center" VerticalAlignment="Center" 
                                      Content="Text-to-speech"
                                     IsChecked="False"
                                      Command="{Binding SubmitChatMessageAsyncCommand}"/>
                    </StackPanel>-->


                </Grid>

                <Grid Grid.Row="1">
                </Grid>
            </Grid>
        </DockPanel>
    </Grid>


</UserControl>
